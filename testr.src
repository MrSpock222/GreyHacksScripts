if params.len != 1 or params[0] == "-h" or params[0] == "--help" then exit("<b>Usage: "+program_path.split("/")[-1]+" [ip_address]</b>")

metaxploit = include_lib("/lib/metaxploit.so")
if not metaxploit then metaxploit = include_lib(current_path + "/metaxploit.so")
if not metaxploit then exit("Error: Can't find metaxploit library in the /lib path or the current folder")

address = params[0]
net_session = metaxploit.net_use( address )
if not net_session then exit("Error: can't connect to net session")


metaLib = net_session.dump_lib
memory = metaxploit.scan(metaLib)

getPasswords = function()
shell = null
pass = null
passwords = []

for mem in memory
	address = metaxploit.scan_address(metaLib, mem).split("Unsafe check: ")

	for add in address
		if add == address[0] then continue
		value = add[add.indexOf("<b>") + 3 : add.indexOf("</b>")]
		value = value.replace("\n", "")
		result = metaLib.overflow(mem, value)
		print("mem: " + mem + "\n" + "value: " + value)
		
		if typeof(result) != "shell" and typeof(result) != "computer" then continue
		if typeof(result) == "shell" then shell = result
		if typeof(result) == "shell" then comp = result.host_computer
		if typeof(result) == "computer" then comp = result

		file = comp.File("/etc/passwd")
		if not file then continue
		cont = file.get_content
		if not cont then continue
		pass = cont.split("\n")
		for obj in pass
			passwords.push(pass)
		end for
	end for
end for

num = 1
users = []
for obj in passwords
	for i in obj
		if i then
		users.push(i)
		print("\n" + num + ": " + i)
		num = num + 1
		end if
	end for
end for

if users.len < 1 then exit("Passwords couldnt get collected")

option = ""
inputOk = false
	while( not inputOk )
		option = user_input("Select user: ").to_int
		if typeof(option) != "number" or (option < 1 or option > users.len) then
			print("Invalid input. Type a valid number")
		else
			inputOk = true
		end if
	end while

print("<"+ users[option-1] +">")
print(get_shell.launch(current_path + "/decipher", users[option-1]))


end function

getMails = function()
shell = null
pass = null
passwords = []

for mem in memory
	address = metaxploit.scan_address(metaLib, mem).split("Unsafe check: ")

	for add in address
		if add == address[0] then continue
		value = add[add.indexOf("<b>") + 3 : add.indexOf("</b>")]
		value = value.replace("\n", "")
		result = metaLib.overflow(mem, value)
		print("mem: " + mem + "\n" + "value: " + value)
		
		if typeof(result) != "shell" and typeof(result) != "computer" then continue
		if typeof(result) == "shell" then shell = result
		if typeof(result) == "shell" then comp = result.host_computer
		if typeof(result) == "computer" then comp = result

		
		
		homeDir = comp.File("/home")
    	if homeDir and homeDir.get_folders then 
		userFolders = homeDir.get_folders()       
        for userFolder in userFolders
            mailFilePath = userFolder.path + "/Config/Mail.txt"
            mailFile = comp.File(mailFilePath)
			if not mailFile then continue
			cont = mailFile.get_content
			if not cont then continue

			passwords.push(cont)
		end for
		end if
	end for
end for


num = 1
for obj in passwords
	print(num + ": " + obj)
	num = num + 1
end for



if passwords.len < 1 then exit("Emails couldnt get collected")

option = ""
inputOk = false
	while( not inputOk )
		option = user_input("Select user: ").to_int
		if typeof(option) != "number" or (option < 1 or option > passwords.len) then
			print("Invalid input. Type a valid number")
		else
			inputOk = true
		end if
	end while


print("<"+ passwords[option-1] +">")
print(get_shell.launch(current_path + "/decipher", passwords[option-1]))


end function

getAccsess = function()
shell = null
pass = null

for mem in memory
	address = metaxploit.scan_address(metaLib, mem).split("Unsafe check: ")

	for add in address
		
		if add == address[0] then continue
		value = add[add.indexOf("<b>") + 3 : add.indexOf("</b>")]
		value = value.replace("\n", "")
		result = metaLib.overflow(mem, value, "haha")
		print("mem: " + mem + "\n" + "value: " + value)
		
		if typeof(result) != "shell" then continue
		if typeof(result) == "shell" then shell = result
		if shell then shell.start_terminal

	end for
end for



end function

print("\n 1: getPasswords \n 2: getMails \n 3: getAccsess \n")
option = ""
inputOk = false
	while( not inputOk )
		option = user_input("Select attack: ").to_int
		if typeof(option) != "number" or (option < 1 or option > 3) then
			print("Invalid input. Type a valid number")
		else
			inputOk = true
		end if
	end while

if option == 1 then getPasswords()
if option == 2 then getMails()
if option == 3 then getAccsess()